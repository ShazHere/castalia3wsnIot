# *******************************************************************************/
# Author: Shaza Hanif
# Date: 30 May, 2015
#
# *******************************************************************************/


[General]


# ==========================================================
# Always include the main Castalia.ini file
# ==========================================================
include ../Parameters/Castalia.ini

#set simulation time
sim-time-limit = 100s

SN.field_x = 30					# meters
SN.field_y = 30					# meters

# Specifying number of nodes and their deployment
SN.numNodes = 11
SN.deployment = "[1..9]->3x3"
#node id 9 is at 30:30:0 and node 1 is at 0:0:0

## 10th node is like a car ;), 0th node is sink and 1..9 are SN's
## 11th node is like another car, starting from middle to 0,0
SN.node[10].xCoor = 29
SN.node[10].yCoor = 30
SN.node[0].xCoor = 1  #Sink location should be consistent with  NodeIot.startup() sink location
SN.node[0].yCoor = 0

# Removing variability from wireless channel
SN.wirelessChannel.bidirectionalSigma = 0
SN.wirelessChannel.sigma = 0

## important wireless channel switch to allow mobility
SN.wirelessChannel.onlyStaticNodes = false

## setting mobility for node[10]
SN.node[10].MobilityManagerName = "LineMobilityManager"
SN.node[10].MobilityManager.updateInterval = 1000 #earlier value was 100
SN.node[10].MobilityManager.xCoorDestination = 0
SN.node[10].MobilityManager.yCoorDestination = 0
SN.node[10].MobilityManager.speed = 1  
#As per my analysis, if speed is 1, then it means 1 point distance of field in one 
#sec. If its 10 then 10 points distance. 


# Select a Radio and a default Tx power
SN.node[*].Communication.Radio.RadioParametersFile = "../Parameters/Radio/CC2420.txt"
#SN.node[*].Communication.Radio.mode = "IDEAL" # to check the effect on reception at sink and other nodes
SN.node[2..9].Communication.Radio.TxOutputPower = "-10dBm"
SN.node[1].Communication.Radio.TxOutputPower = "-5dBm"
SN.node[10].Communication.Radio.TxOutputPower = "-5dBm" #much stronger than SN's. 
SN.node[0].Communication.Radio.TxOutputPower = "-10dBm" #much stronger than SN's. 
#SN.node[5].Communication.Radio.TxOutputPower = "-5dBm" #For testing purpose
#for adjusting value of TxOuputPower, check the CC2420 file, highest for this radio is 0dBM

# Nodes location may become visible
#SN.node[*].MobilityManager.collectTraceInfo = true

#There are two different applications running, IoT node has different application
SN.node[0..9].ApplicationName = "NodeSensor"
SN.node[0..9].Application.collectTraceInfo = true

SN.node[10].ApplicationName = "NodeIot"
SN.node[10].Application.collectTraceInfo = true

SN.node[0].ApplicationName = "NodeSensor"
SN.node[0].Application.collectTraceInfo = true

SN.node[0].Application.isSink = true  
#SN.node[*].Communication.RoutingProtocolName = "MultipathRingsRouting"
SN.node[*].Communication.MACProtocolName = "TunableMAC"
SN.node[*].Communication.Radio.collisionModel = 0 ##used by REL people
SN.node[*].Communication.MAC.dutyCycle = 0.5

## These tests use big packets (2kb) to show interference clearly
## This requires to set the max pkt size in all communication layers
#SN.node[0].Communication.Routing.maxNetFrameSize = 2500
#SN.node[0].Communication.MAC.maxMACFrameSize = 2500
#SN.node[0].Communication.Radio.maxPhyFrameSize = 2500
#
## application's trace info for node 0 (receiving node)
## is turned on, to show some interesting patterns
#SN.node[0].Application.collectTraceInfo = true


[Config twoIot]
SN.field_x = 30					# meters
SN.field_y = 30					# meters

# Specifying number of nodes and their deployment
SN.numNodes = 12
SN.deployment = "[1..9]->3x3"
#node id 9 is at 30:30:0 and node 1 is at 0:0:0

## 10th node is like a car ;), 0th node is sink and 1..9 are SN's
## 11th node is like another car, starting from middle to 0,0
SN.node[10].xCoor = 29
SN.node[10].yCoor = 30
SN.node[0].xCoor = 1  #Sink location should be consistent with  NodeIot.startup() sink location
SN.node[0].yCoor = 0
SN.node[11].xCoor = 0
SN.node[11].yCoor = 0


## setting mobility for node[10]
SN.node[10..11].MobilityManagerName = "LineMobilityManager"
SN.node[10..11].MobilityManager.updateInterval = 1000 #earlier value was 100
SN.node[10].MobilityManager.xCoorDestination = 17
SN.node[10].MobilityManager.yCoorDestination = 17
SN.node[11].MobilityManager.xCoorDestination = 16
SN.node[11].MobilityManager.yCoorDestination = 16
SN.node[10..11].MobilityManager.speed = 1  
#As per my analysis, if speed is 1, then it means 1 point distance of field in one 
#sec. If its 10 then 10 points distance. 


# Select a Radio and a default Tx power
SN.node[*].Communication.Radio.RadioParametersFile = "../Parameters/Radio/CC2420.txt"
SN.node[1..9].Communication.Radio.TxOutputPower = "-10dBm"
SN.node[10..11].Communication.Radio.TxOutputPower = "-5dBm" #much stronger than SN's. 
SN.node[0].Communication.Radio.TxOutputPower = "-10dBm" #much stronger than SN's. 
#SN.node[5].Communication.Radio.TxOutputPower = "-5dBm" #For testing purpose
#for adjusting value of TxOuputPower, check the CC2420 file, highest for this radio is 0dBM

# Nodes location may become visible
#SN.node[*].MobilityManager.collectTraceInfo = true

#There are two different applications running, IoT node has different application
SN.node[0..9].ApplicationName = "NodeSensor"
SN.node[0..9].Application.collectTraceInfo = true

SN.node[10..11].ApplicationName = "NodeIot"
SN.node[10..11].Application.collectTraceInfo = true

SN.node[0].ApplicationName = "NodeSensor"
SN.node[0].Application.collectTraceInfo = true

SN.node[0].Application.isSink = true


[Config varyTxPower]
SN.node[*].Communication.Radio.TxOutputPower = ${TXpower="0dBm","-5dBm"}

