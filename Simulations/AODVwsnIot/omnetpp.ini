#/***********************************************************************************************
# *  Copyright (c) Federal University of Para, brazil - 2012                                    *
# *  Developed at the Research Group on Computer Network and Multimedia Communication (GERCOM)  *
# *  All rights reserved                                                                        *
# *                                                                                             *
# *  Permission to use, copy, modify, and distribute this protocol and its documentation for    *
# *  any purpose, without fee, and without written agreement is hereby granted, provided that   *
# *  the above copyright notice, and the author appear in all copies of this protocol.          *
# *                                                                                             *
# *  Author(s): C. Perkins                                                                      *
# *  Reference Paper: RFC 3561                                                                  *
# *  Implementarion: Thiago Fernandes <thiago.oliveira@itec.ufpa.br> <thiagofdso.ufpa@gmail.com>* 
# **********************************************************************************************/

# This file confugration is 1/5 times less network size than in AODVTest
[General]

include ../Parameters/Castalia.ini

sim-time-limit = 70s

SN.field_x = 15                                        # meters
SN.field_y = 15                                        # meters
SN.numNodes = 10
SN.deployment = "[1..9]->3x3"#"uniform" #if not set, all nodes are at location (0,0)
SN.node[0].xCoor = 1  #Sink location should be consistent with  NodeIot.startup() sink location
SN.node[0].yCoor = 0

SN.node[1..].ResourceManager.initialEnergy = 100
SN.node[*].Communication.Radio.RadioParametersFile = "../Parameters/Radio/CC2420.txt"

SN.node[*].Communication.Radio.collectTraceInfo = false
SN.node[*].Communication.Radio.TxOutputPower = "-5"
SN.node[*].Communication.MAC.collectTraceInfo = false
SN.node[*].Communication.Routing.collectTraceInfo = false


SN.wirelessChannel.sigma = 0
SN.wirelessChannel.bidirectionalSigma = 0
		
SN.node[*].Communication.Radio.collisionModel = 0

SN.node[0].Application.isSink = true  
SN.node[*].Application.packet_rate = 1
SN.node[*].Application.constantDataPayload = 100
SN.node[*].Application.packetHeaderOverhead = 5

#include ../Parameters/MAC/SMAC.ini
SN.Node[0].Application.isSink = true
SN.node[*].Communication.MACProtocolName = "TunableMAC"


[Config wsnIot]

SN.numNodes = 11
## 10th node is like a car ;), 0th node is sink and 1..9 are SN's
SN.node[10].xCoor = 14.5
SN.node[10].yCoor = 15
SN.node[*].Application.totalIotNodes = 1

SN.wirelessChannel.onlyStaticNodes = false

## setting mobility for node[10]
SN.node[10].MobilityManagerName = "LineMobilityManager"
SN.node[10].MobilityManager.updateInterval = 1000 #earlier value was 100
SN.node[10].MobilityManager.xCoorDestination = 0
SN.node[10].MobilityManager.yCoorDestination = 0
SN.node[10].MobilityManager.speed = 1  
#As per my analysis, if speed is 1, then it means 1 point distance of field in one 
#sec. If its 10 then 10 points distance. 

#There are two different applications running, IoT node has different application
SN.node[0..9].ApplicationName = "NodeSensor"
SN.node[0..9].Application.collectTraceInfo = true

SN.node[10].ApplicationName = "NodeIot"
SN.node[10].Application.collectTraceInfo = true

SN.node[0].ApplicationName = "NodeSensor"
SN.node[0].Application.collectTraceInfo = true


#SN.node[*].Communication.RoutingProtocolName = "MultipathRingsRouting"
SN.node[*].Communication.MACProtocolName = "TunableMAC"
SN.node[*].Communication.Radio.collisionModel = 0 ##used by REL people
#SN.node[*].Communication.MAC.dutyCycle = 0.5
[Config AODV]
SN.wirelessChannel.onlyStaticNodes = true

SN.node[*].ApplicationName = "ThroughputTest"

SN.node[*].Communication.RoutingProtocolName = "AodvRouting"
SN.node[*].MobilityManager.collectTraceInfo = true

SN.node[*].Communication.Routing.collectTraceInfo = false
SN.node[*].Application.collectTraceInfo = true

